plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		compileClasspath += main.output
		runtimeClasspath += main.runtimeClasspath
		runtimeClasspath += main.output
		resources {
			srcDir("src/testmod/generated/resources")
			exclude("src/testmod/generated/resources/.cache")
		}
	}
}
fabricApi {
	configureDataGeneration {
		client = true
	}
}
loom {
	accessWidenerPath = file("src/main/resources/tenreg.accesswidener")

	runs {
		testmodClient {
			client()
			name = "Testmod Client"
			source sourceSets.testmod
		}
		testmodDataGen {
			client()
			name = "Testmod Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/testmod/generated/resources")}"
			vmArg "-Dfabric-api.datagen.modid=testmod"
			source sourceSets.testmod
		}
	}
}
dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	compileOnly("org.projectlombok:lombok:1.18.38")
	annotationProcessor("org.projectlombok:lombok:1.18.38")
	
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
		maven {
			name = "nexusrealmsSnapshots"
			url = uri("https://maven.riftrealms.de/snapshots")
			credentials(org.gradle.api.credentials.PasswordCredentials)
			authentication{
				basic(BasicAuthentication)
			}
		}
	}
}